*,
::before,
::after {
    box-sizing: border-box;
}

:root {
    --clr-text: #ffffff;
    --clr-bg: #282a39;
    --clr-important: #e92f72;
    --clr-misc: #28ffff;

    --fw-normal: 400;
    --fw-bold: 700;
}

html,
body {
    height: 100%;
}

body {
    display: flex;
    flex-direction: column;

    margin: 0;
    background-color: var(--clr-bg);

    font-family: "Source Code Pro", monospace;
    font-size: clamp(1rem, 5vw, 2rem);
    color: var(--clr-text);
    letter-spacing: -0.1em;

    overflow-x: hidden;
}

::selection {
    background-color: var(--clr-misc);
    color: var(--clr-important);
}

p {
    margin: 0.5em 0;
}

a {
    padding: 0.1em 0.2em;
    transform: translateX(-0.2em);

    color: var(--clr-misc);
    text-decoration-color: var(--clr-important);
    text-decoration-thickness: 0.1em;
    word-break: break-word;

    transition: text-decoration-thickness 50ms linear;
}

a:hover {
    text-decoration-thickness: 0.15em;
}

a:focus-visible {
    outline: none;
    background-color: rgba(0, 0, 0, 0.5);
}

a > svg {
    max-height: 1em;
    margin-inline-start: 0.5em;

    vertical-align: sub;
}

.slide {
    flex-grow: 1;

    padding-top: 1em;
    padding-bottom: 1em;
}

.slide--center {
    display: grid;
    place-items: center;
    text-align: center;
}

.slide:not(:target) {
    display: none;
}

.container {
    width: min(1200px, 90%);
    margin: auto;

    height: 100%;
}

.tight {
    max-width: 600px;
}

:is(.v-center, .h-center) {
    display: flex;
    flex-direction: column;
}

.h-center {
    text-align: center;
    align-items: center;
}

.v-center {
    justify-content: center;
}

.title {
    font-size: 2em;
    font-weight: var(--fw-normal);
    margin-top: 0;
    margin-bottom: 0.25em;
}

.subtitle {
    font-size: 1.3em;
    font-weight: var(--fw-normal);
    margin-top: 0;
    margin-bottom: 0.25em;
}

strong {
    font-weight: var(--fw-bold);
    color: var(--clr-important);
    text-shadow: 0.05em 0.05em 0 var(--clr-misc);
}

em {
    font-style: normal;
    color: var(--clr-misc);
}

.italic {
    font-style: italic;
}

.misc {
    color: var(--clr-misc);
}

.log-block {
    background-color: #111;
    box-shadow: 0.3em 0.3em 0 var(--clr-misc), -0.3em -0.3em 0 var(--clr-important);

    padding: 1em;
}

.log {
    margin: 0.4em 0;
    line-height: 100%;
}

.log-template {
    color: #999;
    font-size: 0.9em;
}

.log-exit-message {
    color: #bbb;
    font-size: 0.8em;
}

.log-block ::selection {
    background-color: #fff;
    color: #111;
}

.tooling {
    padding-bottom: 0.5em;
}

.tooling > .container {
    display: flex;
    align-items: center;
    gap: 1em;

    margin-top: auto;
}

:is(.tooling__home, .tooling__prev, .tooling__next, .tooling__settings) {
    display: flex;
    align-items: center;
    justify-content: center;

    position: relative;

    --size: 1.125em;
    width: var(--size);
    height: var(--size);
    border: 0;
    background-color: transparent;

    line-height: var(--size);
    font-size: var(--size);
    font-family: "Material Icons";
    color: var(--clr-text);

    user-select: none;
    box-shadow: none;
}

:is(.tooling__home, .tooling__prev, .tooling__next, .tooling__settings):hover {
    background-color: rgba(255, 255, 255, 0.1);
    cursor: pointer;
    opacity: 1;
}

:is(.tooling__home, .tooling__prev, .tooling__next, .tooling__settings):focus-visible {
    outline: none;
    background-color: var(--clr-text);
    color: var(--clr-bg);
    box-shadow: none;
}

:is(.tooling__home, .tooling__prev, .tooling__next, .tooling__settings):disabled {
    pointer-events: none;
    opacity: 0.3;
}

:is(.tooling__home, .tooling__prev, .tooling__next, .tooling__settings)::after {
    content: attr(aria-label);

    display: none;
    --display-visible: revert;

    position: absolute;
    bottom: calc(100% + 1em);
    left: 50%;

    height: max-content;
    padding: 0.2em 0.4em;
    background-color: var(--clr-text);
    color: var(--clr-bg);
    border-radius: 0.3em;

    font-family: "Source Code Pro", monospace;
    font-size: 0.4em;
    font-weight: var(--fw-bold);
    text-transform: capitalize;
    line-height: 100%;

    transform: translateX(-50%);
    box-shadow: 0 0 0.2em black;
}

:is(.tooling__home, .tooling__prev, .tooling__next, .tooling__settings):is(:hover, :focus-visible)::after {
    display: var(--display-visible);
}

.tooling__settings--copied::after {
    content: "Copied!";

    display: var(--revert-visible);
    background-color: rgb(2, 120, 2);
    color: var(--clr-text);
}

.tooling__prev {
    margin-left: auto;
}

.tooling__progress {
    font-size: clamp(0.9rem, 4vw, 1.2rem);
    margin-left: auto;
}

/* SPECIFIC SLIDE STYLING */

:is(#\/explaining-the-vulnerability\/logging-example, #\/explaining-the-vulnerability\/logging-example-with-templates) :is(.log, .log-exit-message) {
    animation: logging-example-reveal 5s steps(1);
}

:is(#\/explaining-the-vulnerability\/logging-example, #\/explaining-the-vulnerability\/logging-example-with-templates) .log:first-child {
    animation-duration: 1s;
}

:is(#\/explaining-the-vulnerability\/logging-example, #\/explaining-the-vulnerability\/logging-example-with-templates) .log:nth-child(2) {
    animation-duration: 2s;
}

@keyframes logging-example-reveal {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

:is(#\/explaining-the-vulnerability\/logging-example, #\/explaining-the-vulnerability\/logging-example-with-templates) .log-exit-message {
    margin-bottom: 0;
}

:is(#\/explaining-the-vulnerability\/logging-example, #\/explaining-the-vulnerability\/logging-example-with-templates) .log:first-child {
    margin-top: 0;
}

#\/unlisted\/settings {
    font-size: 0.8em;
}

#settings #settings-modes-subtitle {
    margin-top: 1em;
    font-size: 1.2em;
}

#toggle-indicator {
    font-size: 0.7em;
    color: #ddd;
}

.mode > input {
    display: none;
}

.mode > input ~ label {
    display: flex;
    align-items: center;
    gap: 0.5em;

    width: max-content;
    padding: 0.1em 0.2em;

    user-select: none;
    transform: translateX(-0.2em);
}
.mode > input ~ label:hover,
.mode > input ~ label:focus-visible {
    background-color: rgba(0, 0, 0, 0.5);
    outline: none;

    cursor: pointer;
}

.icon-enabled {
    color: rgb(10, 200, 30);
}

.icon-disabled {
    color: rgb(280, 30, 10);
}

.mode :is(.icon-enabled, .icon-disabled) {
    display: none;
}

.mode > input:checked ~ label > .icon-enabled {
    display: revert;
}

.mode > input:not(:checked) ~ label > .icon-disabled {
    display: revert;
}

#settings-go-back {
    display: flex;
    align-items: center;

    width: max-content;
    padding: .1em .2em;

    border: 0;
    background-color: transparent;
    color: inherit;

    font: inherit;

    transform: translateX(-.2em);
    box-shadow: none;
}

#settings-go-back:hover,
#settings-go-back:focus-visible {
    background-color: rgba(0, 0, 0, 0.5);
    outline: none;

    cursor: pointer;
}